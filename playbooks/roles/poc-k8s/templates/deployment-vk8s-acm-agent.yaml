apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-apigw
  namespace: "{{ extra_volterra_namespace }}"
  labels:
    owner: "{{ extra_owner_email.split('@')[0] }}"
    project: cloudbuilder
  annotations:
    ves.io/app: nginx-apigw
    ves.io/workload-flavor: ves-io-medium
    ves.io/workload-flavor-nginx-agent: tiny
spec:
  replicas: 1
  selector:
    matchLabels:
      ves.io/workload: nginx-apigw
  template:
    metadata:
      labels:
        ves.io/workload: nginx-apigw
    spec:
      terminationGracePeriodSeconds: 120
      containers:
        - name: nginx-agent
          image: "{{ stats_acr_login_server }}/nginx-agent:{{ extra_app.name }}{{ extra_volterra_site_id }}-{{ extra_environment }}"
          env:
            - name: ENV_CONTROLLER_INSTANCE_GROUP
              value: "{{ extra_app.name }}{{ extra_volterra_site_id }}-{{ extra_environment }}"
            - name: ENV_CONTROLLER_HOST
              value: "{{ extra_nginx_acm.fqdn }}"
            - name: ENV_CONTROLLER_USER
              valueFrom:
                secretKeyRef:
                  name: acm-credential
                  key: username
            - name: ENV_CONTROLLER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: acm-credential
                  key: password
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: "nginx-apigw-{{ stats_acr_login_server  | replace('.', '-') }}"
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
